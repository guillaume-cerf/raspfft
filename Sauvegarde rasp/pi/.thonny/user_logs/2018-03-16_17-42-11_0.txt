[
    {
        "view_class": "HelpView",
        "sequence": "ShowView",
        "view_id": 3037571600,
        "time": "2018-03-16T17:42:12.341885"
    },
    {
        "text_widget_id": 3037513680,
        "sequence": "EditorTextCreated",
        "editor_class": "Editor",
        "time": "2018-03-16T17:42:12.994176",
        "editor_id": 3037514064,
        "text_widget_class": "CodeViewText"
    },
    {
        "text_widget_id": 3037513680,
        "sequence": "Open",
        "editor_class": "Editor",
        "filename": "/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests/test_fft.py",
        "time": "2018-03-16T17:42:13.002386",
        "editor_id": 3037514064,
        "text_widget_class": "CodeViewText"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037513680,
        "time": "2018-03-16T17:42:14.027013",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "()",
        "sequence": "TextInsert",
        "text_widget_id": 3037513680,
        "index": "1.0",
        "text": "from numpy import linspace,sin\nfrom numpy import fft  #from scipy.fftpack import fft\nfrom matplotlib.pyplot import *\n\n\nN=30\nxmax=2\nX=linspace(0,xmax,N)\nte=xmax/(N-1)\nfe=1/te\nY=[]\nfor i in range(N):\n    Y.append(sin(12*X[i])+2*sin(24*X[i])) #periode T=2TT/6 donc 1 et f=6/2TT = 1\n\nF=linspace(0,fe,N) #ie un pas de fe/(N-1)\n\nTF=2*abs(fft.fft(Y))/N  #toujours 2/N pour avoir la bonne amplitude\nprint(TF)\nprint(fe)\nprint(te)\n\nsubplot(121)    \nplot(X,Y)\nhold()\nsubplot(122)    \nplot(F[0:N//2],TF[0:N//2])\nshow()\n",
        "time": "2018-03-16T17:42:14.114730",
        "text_widget_class": "CodeViewText"
    },
    {
        "view_class": "ShellView",
        "sequence": "ShowView",
        "view_id": "ShellView",
        "time": "2018-03-16T17:42:14.193484"
    },
    {
        "view_class": "HelpView",
        "sequence": "ShowView",
        "view_id": "HelpView",
        "time": "2018-03-16T17:42:14.199747"
    },
    {
        "tags": "('welcome',)",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "1.0",
        "text": "Python 3.4.2 (/usr/bin/python3)",
        "time": "2018-03-16T17:42:18.108700",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io',)",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "1.31",
        "text": "\n",
        "time": "2018-03-16T17:42:18.129695",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('toplevel', 'prompt')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "2.0",
        "text": ">>> ",
        "time": "2018-03-16T17:42:18.137715",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:42:18.179521",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "index1": "2.4",
        "index2": "3.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:42:20.824299",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('automagic', 'toplevel', 'command')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "2.4",
        "text": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests'\n%Run test_fft.py\n",
        "time": "2018-03-16T17:42:20.831467",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "4.0",
        "index2": "4.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:42:20.849033",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests'\n",
        "time": "2018-03-16T17:42:20.859110",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:42:20.873740",
        "sequence": "ShellCommand",
        "command_text": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests'\n"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:42:20.874647",
        "sequence": "Command",
        "command_id": "run_current_script"
    },
    {
        "tags": "('toplevel', 'prompt')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "3.0",
        "text": ">>> ",
        "time": "2018-03-16T17:42:20.891550",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "4.0",
        "index2": "4.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:42:20.900934",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%Run test_fft.py\n",
        "time": "2018-03-16T17:42:20.909949",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:42:22.458649",
        "sequence": "ShellCommand",
        "command_text": "%Run test_fft.py\n"
    },
    {
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "4.0",
        "text": "[",
        "time": "2018-03-16T17:42:33.118463",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "4.1",
        "text": " 0.06278993  0.06488588  0.07281824  0.09887424  0.95534003  0.06278357\n  0.10070043  0.21412248  1.96615885  0.17146702  0.08889269  0.06038904\n  0.04665913  0.03931854  0.03559757  0.03445034  0.03559757  0.03931854\n  0.04665913  0.06038904  0.08889269  0.17146702  1.96615885  0.21412248\n  0.10070043  0.06278357  0.95534003  0.09887424  0.07281824  0.06488588]\n14.5",
        "time": "2018-03-16T17:42:33.136007",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "9.4",
        "text": "\n0.06896551724137931\n",
        "time": "2018-03-16T17:42:33.183810",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:42:40.503255",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "11.0",
        "text": ">>> ",
        "time": "2018-03-16T17:42:58.818261",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:42:58.874577",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3018948560,
        "time": "2018-03-16T17:43:00.242220",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget": ".#3038320304",
        "time": "2018-03-16T17:43:10.707594",
        "sequence": "<Button-1>"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:10.767607",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget": ".#3038320304.#3038320304#3041767504",
        "time": "2018-03-16T17:43:11.758905",
        "sequence": "<Button-1>"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:12.337594",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:12.487865",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget": ".__tk_filedialog.contents.icons.cHull.canvas",
        "time": "2018-03-16T17:43:17.389656",
        "sequence": "<Button-1>"
    },
    {
        "text_widget_id": 3017208592,
        "sequence": "EditorTextCreated",
        "editor_class": "Editor",
        "time": "2018-03-16T17:43:19.144450",
        "editor_id": 3037572656,
        "text_widget_class": "CodeViewText"
    },
    {
        "text_widget_id": 3017208592,
        "sequence": "Open",
        "editor_class": "Editor",
        "filename": "/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests/main.py",
        "time": "2018-03-16T17:43:19.151009",
        "editor_id": 3037572656,
        "text_widget_class": "CodeViewText"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "sequence": "TextDelete",
        "text_widget_id": 3017208592,
        "time": "2018-03-16T17:43:19.165972",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "()",
        "sequence": "TextInsert",
        "text_widget_id": 3017208592,
        "index": "1.0",
        "text": "import sys #impos\u00e9 par QT\nfrom PyQt4.QtCore import * #impos\u00e9 par QT\nfrom PyQt4.QtGui import * #impos\u00e9 par QT\nfrom PyQt4 import *\n#import tkinter\nfrom accueil import Ui_MainWindow\n\n\n\nclass Interface(QMainWindow): #pour une autre fen\u00eatre, \u00e7a peut \u00eatre QDialog\n    def __init__(self):\n        QMainWindow.__init__(self) #Appel explicite du constructeur de la classe m\u00e8re, impos\u00e9 par python\n\n        #Instanciation et initialisation de l'interface Qt\n        self.ui = Ui_MainWindow() #class cr\u00e9\u00e9e par Qt METTRE UN VRAI NOM\n        self.ui.setupUi(self)\n\n        self.connect(self.ui.acquisition, SIGNAL('clicked()'), self.action_acquisition)\n        self.connect(self.ui.options, SIGNAL('clicked()'), self.action_options)\n\n\n    def action_acquisition(self):\n        global interface, interface2\n        print('lancement acquisition')\n        interface2 = Interface()\n        interface2.show() #cr\u00e9\u00e9 une 2e\n        interface=0       ###supprime la premi\u00e8re page -> permet de passer d'une page \u00e0 l'autre en enlevant la page pr\u00e9c\u00e9dente\n        ###interface.quit()\n\n    def action_options(self):\n        global interface\n        interface = Interface()  ##\u00e9crase la 1ere donc repart sur init\n        interface.show()\n        \n        print(\"lancement options\")\n        \n        \n###MainWindow.showFullScreen()\n###MainWindow.showMaximized()\n        \n\n\n\n#Test de l'application\nif __name__==\"__main__\":\n    appUI = QApplication(sys.argv) #Instanciation de l'application (pour intercepter les mouvements de souris etc...)\n    interface = Interface() #Instanciation de l'interface\n#    interface.resize(480,320)\n    interface.show() #Affichage de l'interface\n    sys.exit(appUI.exec_()) #Execution de l'application\n    \n",
        "time": "2018-03-16T17:43:19.232528",
        "text_widget_class": "CodeViewText"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:43:19.359737",
        "sequence": "Command",
        "command_id": "open_file"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:19.367293",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "index1": "11.4",
        "index2": "12.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:43:22.306325",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('automagic', 'toplevel', 'command')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "11.4",
        "text": "%Run main.py\n",
        "time": "2018-03-16T17:43:22.313272",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "12.0",
        "index2": "12.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:43:22.327389",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%Run main.py\n",
        "time": "2018-03-16T17:43:22.334986",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:43:23.897434",
        "sequence": "ShellCommand",
        "command_text": "%Run main.py\n"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:43:23.898502",
        "sequence": "Command",
        "command_id": "run_current_script"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:26.885574",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:40.647721",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('io', 'stderr', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "12.0",
        "text": "T",
        "time": "2018-03-16T17:43:40.740051",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "12.1",
        "text": "raceback (most recent call last):\n",
        "time": "2018-03-16T17:43:40.758289",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "13.0",
        "text": "  ",
        "time": "2018-03-16T17:43:40.786642",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr', 'hyperlink')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "13.2",
        "text": "File \"/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/Tests/main.py\", line 50, in <module>",
        "time": "2018-03-16T17:43:40.802490",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "13.105",
        "text": "\n",
        "time": "2018-03-16T17:43:40.808182",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "14.0",
        "text": "    sys.exit(appUI.exec_()) #Execution de l'application\n",
        "time": "2018-03-16T17:43:40.824386",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "15.0",
        "text": "SystemExit: 0\n",
        "time": "2018-03-16T17:43:40.830396",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "16.0",
        "text": ">>> ",
        "time": "2018-03-16T17:43:43.013247",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T17:43:44.271295",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T17:43:46.321959",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T17:43:47.163009",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T17:43:47.745952",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T17:43:48.934919",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget": ".#3038320304",
        "time": "2018-03-16T17:43:51.132692",
        "sequence": "<Button-1>"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:51.249396",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget": ".#3038320304.#3038320304#3041767504",
        "time": "2018-03-16T17:43:51.921298",
        "sequence": "<Button-1>"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:52.267255",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:43:52.387202",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget": ".__tk_filedialog.contents.f1.menu",
        "time": "2018-03-16T17:43:55.730086",
        "sequence": "<Button-1>"
    },
    {
        "widget": ".__tk_filedialog.contents.f1.menu.menu",
        "time": "2018-03-16T17:43:57.877810",
        "sequence": "<Button-1>"
    },
    {
        "widget": ".__tk_filedialog.contents.icons.cHull.canvas",
        "time": "2018-03-16T17:43:59.600090",
        "sequence": "<Button-1>"
    },
    {
        "widget": ".__tk_filedialog.contents.icons.cHull.canvas",
        "time": "2018-03-16T17:44:02.228452",
        "sequence": "<Button-1>"
    },
    {
        "text_widget_id": 3019175984,
        "sequence": "EditorTextCreated",
        "editor_class": "Editor",
        "time": "2018-03-16T17:44:03.231153",
        "editor_id": 3019175408,
        "text_widget_class": "CodeViewText"
    },
    {
        "text_widget_id": 3019175984,
        "sequence": "Open",
        "editor_class": "Editor",
        "filename": "/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM/mainIHM.py",
        "time": "2018-03-16T17:44:03.236907",
        "editor_id": 3019175408,
        "text_widget_class": "CodeViewText"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "sequence": "TextDelete",
        "text_widget_id": 3019175984,
        "time": "2018-03-16T17:44:03.251811",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "()",
        "sequence": "TextInsert",
        "text_widget_id": 3019175984,
        "index": "1.0",
        "text": "import sys #impose par QT\nimport os\nfrom PyQt4.QtCore import * #impose par QT\nfrom PyQt4.QtGui import * #impose par QT\nfrom PyQt4 import *\n#import tkinter\nfrom page_reglages import Ui_Reglages\nfrom page_acquisitionzaloeil import Ui_Acquisition\nfrom numpy import linspace,sin\nfrom numpy import fft  #OU from scipy.fftpack import fft #on fait enuite uniquement fft(blabla)\nfrom random import *  #pour les donnees fictives\n\n##------------ Fenetre ACQUISITION avec relations\n\nclass Interface_Acquisition(QWidget): #pour une autre fenetre, ca peut etre QDialog ou QMainWindow ou QWidget\n    def __init__(self):\n        QWidget.__init__(self) #Appel explicite du constructeur de la classe mere, impose par python\n\n        #Instanciation et initialisation de l'interface Qt\n        self.ui = Ui_Acquisition() #class creee par Qt METTRE UN VRAI NOM\n        self.ui.setupUi(self)       #on lance la fonction definie dans la class\n\n        #initialisation parametres\n        global etat_comboBox_freq, etat_comboBox_accel   #en global pour dialoguer entre acquisition et reglages\n\n        self.ui.checkBox_accelx.setChecked(True) #par defaut coche ---- setChecked ou setCheckState\n        self.ui.checkBox_accely.setChecked(True) #par defaut coche\n        self.ui.checkBox_accelz.setCheckState(False) #par defaut non coche\n        self.ui.comboBox_FourrierTempo.setCurrentIndex(0) #par defaut indice 0 donc temporel\n        self.ui.progressBar.setValue(0)  #pour dire quelle valeur mettre (de 0 a 100) ou .value() pour consulter\n        etat_comboBox_freq = 0 #par defaut 200Hz\n        etat_comboBox_accel = 0 #par defaut 2g\n        \n        self.T =[]  #ensemble des temps\n        self.F=[]   #futur ensemble des frequences pour fft\n        self.A1=[]  #ensemble des accel en x\n        self.A2=[]  #ensemble des accel en y\n        self.A3=[]  #ensemble des accel en z\n        self.Atot=[] #equivalent sortie accelero\n        self.TF1 =[] #futur ensemble des TF pour A1\n        self.TF2 =[] #futur ensemble des TF pour A2\n        self.TF3 =[] #futur ensemble des TF pour A3\n        \n        self.ui.matplotlibwidget.axes.set_title('Accelerations')\n        self.ui.matplotlibwidget.axes.set_ylabel('Amplitude') #ou xscale\n        self.ui.matplotlibwidget.axes.set_xlabel('t(s) ou f(Hz)')\n        \n        # definition relations\n        self.connect(self.ui.PushButton_Fermer, SIGNAL('clicked()'), self.action_Fermer)\n        self.connect(self.ui.PushButton_Nouveau, SIGNAL('clicked()'), self.action_Nouveau)\n        self.connect(self.ui.PushButton_Reglages, SIGNAL('clicked()'), self.action_Reglages)\n        self.connect(self.ui.PushButton_Exporter, SIGNAL('clicked()'), self.action_Exporter)\n        self.connect(self.ui.comboBox_FourrierTempo, SIGNAL('currentIndexChanged(int)'), self.action_modif_affichage)\n        self.connect(self.ui.checkBox_accelx, SIGNAL('clicked()'), self.action_modif_affichage) #ou stateChanged(int)\n        self.connect(self.ui.checkBox_accely, SIGNAL('clicked()'), self.action_modif_affichage)\n        self.connect(self.ui.checkBox_accelz, SIGNAL('clicked()'), self.action_modif_affichage)\n        \n    def action_Fermer(self):\n        global interface\n        print('go fermer')\n        interface=0 #sans espace\n        \n    def action_Nouveau(self):\n        print('go nouveau')\n        self.ui.progressBar.setValue(0) #mise a 0\n        self.acquerir()    \n        self.afficher()\n        self.ui.progressBar.setValue(100) #mise a 100 fictive\n        \n    def action_Reglages(self):\n        global interface2\n        print('go reglages')\n        interface2 = Interface_Reglages()\n        interface2.show()\n        \n    def action_Exporter(self):\n        print('go exporter')\n        self.memorise_txt()\n        os.popen(\"recuperation_donnees.txt\")\n        \n\n        \n    def action_modif_affichage(self):\n        print(self.ui.checkBox_accelx.checkState()) #renvoie 0 ou 2\n        print(self.ui.checkBox_accely.checkState())\n        print(self.ui.checkBox_accelz.checkState())\n        print(self.ui.comboBox_FourrierTempo.currentIndex())  # .currentText  ou .currentIndex(0 ou 1)\n        self.afficher()\n\n\n    def acquerir(self):#test matplotlib\n        \"\"\"a pour but d'acquerir les donnees accelero\"\"\"\n        N=randint(80,100)\n        tmax = 2\n        fe=(N-1)/tmax\n        self.T = linspace(0,tmax,N)\n        self.F = linspace(0,fe,N)\n        self.F=self.F[0:N//2] #on coupe a la moitie pour non redondance dans l'affichage\n            \n\n        A = self.calcul_sin(self.T) #acquisition donnees fictives\n        self.A1=A[0]  #accel en x\n        self.A2=A[1]\n        self.A3=A[2]\n        self.Atot=A[3]  #cumul accel type sortie accelero\n\n        self.TF1=2*abs(fft.fft(self.A1))/N  #TF de l'acceleration en x\n        self.TF1=self.TF1[0:N//2]\n        self.TF2=2*abs(fft.fft(self.A2))/N  #TF de l'acceleration en y\n        self.TF2=self.TF2[0:N//2]\n        self.TF3=2*abs(fft.fft(self.A3))/N  #TF de l'acceleration en z\n        self.TF3=self.TF3[0:N//2]\n\n        for i in range(N):   ##on raccourci les nombres en CS\n            self.T[i]=self.nCS(self.T[i])\n            if i<N//2:\n                self.F[i]=self.nCS(self.F[i])\n                self.TF1[i]=self.nCS(self.TF1[i])\n                self.TF2[i]=self.nCS(self.TF2[i])\n                self.TF3[i]=self.nCS(self.TF3[i])\n        \n    def afficher(self):\n        \"\"\"affiche le graphe avec les courbes choisies\"\"\"\n        self.X1=[]\n        self.X2=[]\n        self.X3=[]\n        self.Y1=[] #on affichera tout le temps X1,X2,X3,Y1,Y2,Y3 quitte a etre vide, sont nos variables d'affiachage\n        self.Y2=[]\n        self.Y3=[]\n        self.c1=self.ui.checkBox_accelx.checkState() #lecture etat checkbox 0 ou 2\n        self.c2=self.ui.checkBox_accely.checkState()\n        self.c3=self.ui.checkBox_accelz.checkState()\n        self.c4=self.ui.comboBox_FourrierTempo.currentIndex() #1 pour Fourrier et 0 pour temporel\n        \n        if self.c1==2 and self.c4==0:  #si accelx coche et temporel\n            self.Y1=self.A1\n            self.X1=self.T\n        if self.c2==2 and self.c4==0:\n            self.Y2=self.A2\n            self.X2=self.T\n        if self.c3==2 and self.c4==0:\n            self.Y3=self.A3\n            self.X3=self.T\n\n        if self.c1==2 and self.c4==1:  #si accelx coche et Fourrier\n            self.Y1=self.TF1\n            self.X1=self.F\n        if self.c2==2 and self.c4==1:\n            self.Y2=self.TF2\n            self.X2=self.F\n        if self.c3==2 and self.c4==1:\n            self.Y3=self.TF3\n            self.X3=self.F\n\n            \n        self.ui.matplotlibwidget.axes.hold(False) #on tej le plot precedent et n'est pas ce qui supprime les titres  \n        self.ui.matplotlibwidget.axes.plot(self.X1,self.Y1,'r-')   # . pour avoir les points et - pour les relier --> par exemple'r.-'  \n        self.ui.matplotlibwidget.axes.hold(True) #on maintient\n        self.ui.matplotlibwidget.axes.plot(self.X2,self.Y2,'b-')\n        self.ui.matplotlibwidget.axes.hold(True)\n        self.ui.matplotlibwidget.axes.plot(self.X3,self.Y3,'g-')\n        \n        self.ui.matplotlibwidget.axes.set_title('Accelerations') #a repeter car supprimer par le replot\n        self.ui.matplotlibwidget.axes.set_ylabel('Amplitude') #ou xscale\n        self.ui.matplotlibwidget.axes.set_xlabel('t(s) ou f(Hz)')\n        \n        self.ui.matplotlibwidget.draw() ##important\n        \n    def calcul_sin(self,T):\n        A1=[]\n        A2=[]  #sont des intermediaires de la fonction (pas de self)\n        A3=[]\n        L=[]\n        amplitude=[2*random(),4*random(),3*random()]\n        for i in T:\n            a1,a2,a3=self.nCS(amplitude[0]*sin(3*i)),self.nCS(amplitude[1]*sin(6*i+1)),self.nCS(amplitude[2]*sin(12*i+2))  #2pi/T = 3 ie T=2\n            A1.append(a1)\n            A2.append(a2)\n            A3.append(a3)\n            L.append([a1,a2,a3]) #donnees fictives accelero\n        return [A1,A2,A3,L]\n    \n    def nCS(self,nombre):\n        \"\"\"reduit les chiffres signicatifs a n\"\"\"\n        n=3\n        facteur=10**n\n        return int(facteur*nombre)/facteur\n    \n    def memorise_txt(self): #il faut avoir fait nouveau pour tester\n        \"\"\"passe les donnees dans un fichier txt\"\"\"\n        fich=open('recuperation_donnees.txt','w')\n        fich.write('t(s)                Ax(m/s2)            Ay(m/s2)               Az(m/s2)             F(Hz)              TF(Ax)               TF(Ay)          TF(Az)\\n')\n        for i in range(len(self.T)):\n            a,b,c,d=str(self.T[i]),str(self.Atot[i][0]),str(self.Atot[i][1]),str(self.Atot[i][2])\n            if i<len(self.F):\n                e,f,g,h=str(self.F[i]),str(self.TF1[i]),str(self.TF2[i]),str(self.TF3[i])\n            else:\n                e,f,g,h='','','',''\n            fich.write(a)\n            fich.write('                ') ##avec 4 tabulations tout le temps pour bien separer et avoir un passage propre sur excel\n            fich.write(b)\n            fich.write('                ')\n            fich.write(c)\n            fich.write('                ')\n            fich.write(d)\n            fich.write('                ')\n            fich.write(e)\n            fich.write('                ')\n            fich.write(f)\n            fich.write('                ')\n            fich.write(g)\n            fich.write('                ')\n            fich.write(h)\n            fich.write('\\n')\n        fich.close()\n\n\n\n###----------------Fenetre REGLAGES avec relations\n        \nclass Interface_Reglages(QWidget): #pour une autre fenetre, ca peut etre QDialog ou QMainWindow ou QWidget\n    def __init__(self):\n        QWidget.__init__(self) #Appel explicite du constructeur de la classe mere, impose par python\n\n        #Instanciation et initialisation de l'interface Qt\n        self.ui2 = Ui_Reglages()\n        self.ui2.setupUi(self)\n        #initialisation combobox\n        self.ui2.comboBox_freq.setCurrentIndex(etat_comboBox_freq) #pour memoriser ce qui a ete fait avant\n        self.ui2.comboBox_accel.setCurrentIndex(etat_comboBox_accel)\n\n        self.connect(self.ui2.PushButton_retour, SIGNAL('clicked()'), self.action_retour)\n        self.connect(self.ui2.PushButton_valider, SIGNAL('clicked()'), self.action_valider)\n\n    def action_retour(self):\n        global interface2\n        print('go retour')\n        interface2=0 #sans enregistrer les modif\n\n    def action_valider(self):\n        global etat_comboBox_freq, etat_comboBox_accel, interface2\n        print('go valider')\n        etat_comboBox_freq = self.ui2.comboBox_freq.currentIndex()\n        etat_comboBox_accel = self.ui2.comboBox_accel.currentIndex()\n        print(etat_comboBox_accel)\n        print(etat_comboBox_freq)\n        interface2=0  #il faudra faire de vraies modif sur l'accelero\n    \n###Reglages.showFullScreen()\n###Reglages.showMaximized()\n\n#C:\\Users\\cyril\\Downloads\\WinPython-32bit-3.3.5.9\\python-3.3.5\\Lib\\site-packages\\PyQt4\\doc\\html   qcheckbox etc    \n\n\n\n###------------- Lesture du MAIN pour lancer l'algo\n\n#Test de l'application\nif __name__==\"__main__\":\n    appUI = QApplication(sys.argv) #Instanciation de l'application (pour intercepter les mouvements de souris etc...)\n    interface = Interface_Acquisition() #Instanciation de l'interface\n    #interface = Interface_Reglages()  #l'un ou l'autre pour les tests\n    ##interface.resize(680,320)\n    ##interface.showMaximized()  ##pas utile car n'est lu qu'une fois\n    interface.show() #Affichage de l'interface\n    sys.exit(appUI.exec_()) #Execution de l'application\n    \n",
        "time": "2018-03-16T17:44:03.377781",
        "text_widget_class": "CodeViewText"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:44:03.563156",
        "sequence": "Command",
        "command_id": "open_file"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:44:03.570280",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "index1": "16.4",
        "index2": "17.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:44:11.761800",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('automagic', 'toplevel', 'command')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "16.4",
        "text": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM'\n%Run mainIHM.py\n",
        "time": "2018-03-16T17:44:11.768609",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "18.0",
        "index2": "18.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:44:11.784414",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM'\n",
        "time": "2018-03-16T17:44:11.794298",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:44:11.812111",
        "sequence": "ShellCommand",
        "command_text": "%cd '/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM'\n"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:44:11.813018",
        "sequence": "Command",
        "command_id": "run_current_script"
    },
    {
        "tags": "('toplevel', 'prompt')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "17.0",
        "text": ">>> ",
        "time": "2018-03-16T17:44:11.825373",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "18.0",
        "index2": "18.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:44:11.834886",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%Run mainIHM.py\n",
        "time": "2018-03-16T17:44:11.842503",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:44:13.415571",
        "sequence": "ShellCommand",
        "command_text": "%Run mainIHM.py\n"
    },
    {
        "tags": "None",
        "sequence": "TextInsert",
        "text_widget_id": 3019175984,
        "index": "268.0",
        "text": " ",
        "time": "2018-03-16T17:44:13.530586",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "('io', 'stderr', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "18.0",
        "text": "T",
        "time": "2018-03-16T17:44:13.567796",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "18.1",
        "text": "raceback (most recent call last):\n",
        "time": "2018-03-16T17:44:13.575216",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "19.0",
        "text": "KeyboardInterrupt: Execution interrupted\n",
        "time": "2018-03-16T17:44:13.581575",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "20.0",
        "text": ">>> ",
        "time": "2018-03-16T17:44:13.599343",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "text_widget_id": 3019175984,
        "sequence": "Save",
        "editor_class": "Editor",
        "filename": "/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM/mainIHM.py",
        "time": "2018-03-16T17:44:22.293437",
        "editor_id": 3019175408,
        "text_widget_class": "CodeViewText"
    },
    {
        "index1": "20.4",
        "index2": "21.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:44:22.332426",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('automagic', 'toplevel', 'command')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "20.4",
        "text": "%Run mainIHM.py\n",
        "time": "2018-03-16T17:44:22.339079",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "21.0",
        "index2": "21.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T17:44:22.353987",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%Run mainIHM.py\n",
        "time": "2018-03-16T17:44:22.361710",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T17:44:23.951286",
        "sequence": "ShellCommand",
        "command_text": "%Run mainIHM.py\n"
    },
    {
        "denied": "False",
        "time": "2018-03-16T17:44:23.952427",
        "sequence": "Command",
        "command_id": "run_current_script"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:44:37.898870",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "21.0",
        "text": "g",
        "time": "2018-03-16T17:44:49.438859",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "21.1",
        "text": "o nouveau\n",
        "time": "2018-03-16T17:44:49.456832",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "22.0",
        "text": "go nouveau",
        "time": "2018-03-16T17:44:57.170290",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "22.10",
        "text": "\n",
        "time": "2018-03-16T17:44:57.204521",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "23.0",
        "text": "go fermer\n",
        "time": "2018-03-16T17:45:15.379941",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:45:15.479510",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "24.0",
        "text": "Traceback (most recent call last):\n",
        "time": "2018-03-16T17:45:15.561687",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "25.0",
        "text": "  ",
        "time": "2018-03-16T17:45:15.567819",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr', 'hyperlink')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "25.2",
        "text": "File \"/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM/mainIHM.py\", line 266, in <module>",
        "time": "2018-03-16T17:45:15.573834",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "25.107",
        "text": "\n",
        "time": "2018-03-16T17:45:15.579791",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "26.0",
        "text": "    sys.exit(appUI.exec_()) #Execution de l'application\n",
        "time": "2018-03-16T17:45:15.585895",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "27.0",
        "text": "SystemExit: 0\n",
        "time": "2018-03-16T17:45:15.592140",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "28.0",
        "text": ">>> ",
        "time": "2018-03-16T17:45:17.709965",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T17:45:25.040032",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:17:02.804847",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:07.023841",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:08.432997",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:08.785031",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:09.023411",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:09.499201",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T18:17:10.502277",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:11.381658",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:11.625755",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:11.860525",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:13.222082",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:13.511652",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:13.700039",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:13.900403",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:14.060516",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T18:17:14.262653",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:14.422024",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:14.581442",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T18:17:14.782035",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3037376240,
        "time": "2018-03-16T18:17:14.942329",
        "sequence": "<Button-1>",
        "widget_class": "EditorNotebook"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:15.101436",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:15.701116",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:15.939779",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.146963",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.338491",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.465151",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.620316",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.820334",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:16.980062",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3017167024,
        "time": "2018-03-16T18:17:17.138767",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "sequence": "<Button-1>",
        "text_widget_id": 3019175984,
        "widget_id": 3019175984,
        "time": "2018-03-16T18:17:35.875890",
        "widget_class": "CodeViewText",
        "text_widget_class": "CodeViewText"
    },
    {
        "sequence": "<Button-1>",
        "text_widget_id": 3019175984,
        "widget_id": 3019175984,
        "time": "2018-03-16T18:18:02.093809",
        "widget_class": "CodeViewText",
        "text_widget_class": "CodeViewText"
    },
    {
        "sequence": "<Button-1>",
        "text_widget_id": 3019175984,
        "widget_id": 3019175984,
        "time": "2018-03-16T18:18:03.931628",
        "widget_class": "CodeViewText",
        "text_widget_class": "CodeViewText"
    },
    {
        "sequence": "<Button-1>",
        "text_widget_id": 3019175984,
        "widget_id": 3019175984,
        "time": "2018-03-16T18:18:04.009984",
        "widget_class": "CodeViewText",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "None",
        "sequence": "TextInsert",
        "text_widget_id": 3019175984,
        "index": "191.19",
        "text": ".",
        "time": "2018-03-16T18:18:08.422924",
        "text_widget_class": "CodeViewText"
    },
    {
        "tags": "None",
        "sequence": "TextInsert",
        "text_widget_id": 3019175984,
        "index": "191.20",
        "text": "/",
        "time": "2018-03-16T18:18:10.186460",
        "text_widget_class": "CodeViewText"
    },
    {
        "text_widget_id": 3019175984,
        "sequence": "Save",
        "editor_class": "Editor",
        "filename": "/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM/mainIHM.py",
        "time": "2018-03-16T18:18:16.218075",
        "editor_id": 3019175408,
        "text_widget_class": "CodeViewText"
    },
    {
        "index1": "28.4",
        "index2": "29.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T18:18:16.256276",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('automagic', 'toplevel', 'command')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "28.4",
        "text": "%Run mainIHM.py\n",
        "time": "2018-03-16T18:18:16.263225",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "index1": "29.0",
        "index2": "29.0",
        "sequence": "TextDelete",
        "text_widget_id": 3037437936,
        "time": "2018-03-16T18:18:16.278098",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "cmd_line": "%Run mainIHM.py\n",
        "time": "2018-03-16T18:18:16.285972",
        "sequence": "MagicCommand"
    },
    {
        "time": "2018-03-16T18:18:17.926286",
        "sequence": "ShellCommand",
        "command_text": "%Run mainIHM.py\n"
    },
    {
        "denied": "False",
        "time": "2018-03-16T18:18:17.927351",
        "sequence": "Command",
        "command_id": "run_current_script"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:18:31.850562",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "29.0",
        "text": "g",
        "time": "2018-03-16T18:18:39.931767",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "29.1",
        "text": "o nouveau\n",
        "time": "2018-03-16T18:18:39.939801",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "30.0",
        "text": "go exporter\n",
        "time": "2018-03-16T18:18:48.845214",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:18:57.284030",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "tags": "('io', 'stdout')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "31.0",
        "text": "go fermer\n",
        "time": "2018-03-16T18:18:57.384565",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "32.0",
        "text": "Traceback (most recent call last):\n",
        "time": "2018-03-16T18:18:57.398657",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "33.0",
        "text": "  ",
        "time": "2018-03-16T18:18:57.405027",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr', 'hyperlink')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "33.2",
        "text": "File \"/media/pi/USB DISK/ENSAM/GIE2/Projet Raspberry/Programmation/IHM/mainIHM.py\", line 266, in <module>",
        "time": "2018-03-16T18:18:57.411345",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "33.107",
        "text": "\n",
        "time": "2018-03-16T18:18:57.417213",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "34.0",
        "text": "    sys.exit(appUI.exec_()) #Execution de l'application\n",
        "time": "2018-03-16T18:18:57.423599",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('io', 'stderr')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "35.0",
        "text": "SystemExit: 0\n",
        "time": "2018-03-16T18:18:57.429572",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "sequence": "TextInsert",
        "text_widget_id": 3037437936,
        "index": "36.0",
        "text": ">>> ",
        "time": "2018-03-16T18:18:59.566789",
        "text_widget_context": "shell",
        "text_widget_class": "ShellText"
    },
    {
        "widget_id": 3037376112,
        "time": "2018-03-16T18:19:02.952916",
        "sequence": "<Button-1>",
        "widget_class": "AutomaticNotebook"
    },
    {
        "widget_id": 3037436048,
        "time": "2018-03-16T18:19:03.794510",
        "sequence": "<Button-1>",
        "widget_class": "Scrollbar"
    },
    {
        "widget_id": 3037375120,
        "time": "2018-03-16T18:19:12.147506",
        "sequence": "<Button-1>",
        "widget_class": "Frame"
    },
    {
        "widget_id": 3037375120,
        "time": "2018-03-16T18:19:12.668365",
        "sequence": "<Button-1>",
        "widget_class": "Frame"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:19:19.999814",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:19.124657",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "denied": "True",
        "time": "2018-03-16T18:20:21.049099",
        "sequence": "Command",
        "command_id": "save_file"
    },
    {
        "widget": ".#3038320304",
        "time": "2018-03-16T18:20:23.187116",
        "sequence": "<Button-1>"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:23.201037",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:25.791143",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:27.087298",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:29.274288",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:20:29.328203",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:21:11.315237",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:21:54.278395",
        "sequence": "<FocusOut>",
        "widget_class": "Workbench"
    },
    {
        "widget_id": 3058981168,
        "time": "2018-03-16T18:21:54.364322",
        "sequence": "<FocusIn>",
        "widget_class": "Workbench"
    }
]